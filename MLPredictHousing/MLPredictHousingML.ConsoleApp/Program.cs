// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.IO;
using System.Linq;
using Microsoft.ML;
using MLPredictHousingML.Model;

namespace MLPredictHousingML.ConsoleApp
{
    class Program
    {
        //Dataset to use for predictions 
        private const string DATA_FILEPATH = @"C:\GitHub\Misc-csharp\MLPredictHousing\data\Housing_Data.csv";

        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = LoadSampleRow(DATA_FILEPATH);

            // Make a single prediction on the sample data and print results
            ModelOutput predictionResult = ConsumeModel.Predict(sampleData);

            EvaluatePrediction(sampleData, predictionResult);

            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }

        public static void EvaluatePrediction(ModelInput sampleData, ModelOutput predictionResult)
        {
            Console.WriteLine("Using model to make single prediction -- Comparing actual MEDV with predicted MEDV from sample data...\n\n");
            Console.WriteLine($"CRIM: {sampleData.CRIM}");
            Console.WriteLine($"ZN: {sampleData.ZN}");
            Console.WriteLine($"INDUS: {sampleData.INDUS}");
            Console.WriteLine($"CHAS: {sampleData.CHAS}");
            Console.WriteLine($"NOX: {sampleData.NOX}");
            Console.WriteLine($"RM: {sampleData.RM}");
            Console.WriteLine($"AGE: {sampleData.AGE}");
            Console.WriteLine($"DIS: {sampleData.DIS}");
            Console.WriteLine($"RAD: {sampleData.RAD}");
            Console.WriteLine($"TAX: {sampleData.TAX}");
            Console.WriteLine($"PTRATIO: {sampleData.PTRATIO}");
            Console.WriteLine($"B: {sampleData.B}");
            Console.WriteLine($"LSTAT: {sampleData.LSTAT}");
            Console.WriteLine($"\n\nActual MEDV: {sampleData.MEDV} \nPredicted MEDV: {predictionResult.Score}\n\n");
        }

        // Change this code to create your own sample data
        #region CreateSingleDataSample
        // Method to load single row of dataset to try a single prediction
        public static ModelInput LoadSampleRow(string dataFilePath, int index = 0)
        {
            // Create MLContext
            MLContext mlContext = new MLContext();

            // Load dataset
            IDataView dataView = mlContext.Data.LoadFromTextFile<ModelInput>(
                                            path: dataFilePath,
                                            hasHeader: true,
                                            separatorChar: ',',
                                            allowQuoting: true,
                                            allowSparse: false);

            // Use first line of dataset as model input
            // You can replace this with new test data (hardcoded or from end-user application)
            //ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false).First();
            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false).ElementAt(index);
            return sampleForPrediction;
        }
        #endregion
    }
}

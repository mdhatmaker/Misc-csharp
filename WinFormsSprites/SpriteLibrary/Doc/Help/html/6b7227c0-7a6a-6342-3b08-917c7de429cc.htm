<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SpriteLibrary Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SpriteLibrary namespace" /><meta name="Microsoft.Help.F1" content="SpriteLibrary" /><meta name="Microsoft.Help.Id" content="N:SpriteLibrary" /><meta name="Description" content="SpriteLibrary is a .net graphical library for creating and controlling sprites on a PictureBox. A sprite is an animated image that can be moved around on a picturebox." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="SpriteLibrary" /><meta name="file" content="6b7227c0-7a6a-6342-3b08-917c7de429cc" /><meta name="guid" content="6b7227c0-7a6a-6342-3b08-917c7de429cc" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">SpriteLibrary<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b7227c0-7a6a-6342-3b08-917c7de429cc.htm" title="SpriteLibrary" tocid="roottoc">SpriteLibrary</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b7227c0-7a6a-6342-3b08-917c7de429cc.htm" title="SpriteLibrary" tocid="6b7227c0-7a6a-6342-3b08-917c7de429cc">SpriteLibrary</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5aa6ad83-7060-97ba-0874-99e52486cd6c.htm" title="AnimationInfo Class" tocid="5aa6ad83-7060-97ba-0874-99e52486cd6c">AnimationInfo Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="b0575fa3-d1f2-f3d5-aeff-bdb7b04e46b6.htm" title="AnimationType Enumeration" tocid="b0575fa3-d1f2-f3d5-aeff-bdb7b04e46b6">AnimationType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="66013d9b-4126-7d65-05bb-94eb9d134be6.htm" title="Sprite Class" tocid="66013d9b-4126-7d65-05bb-94eb9d134be6">Sprite Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1bab1e49-641a-5648-d034-4298d8158019.htm" title="Sprite.SpriteEventHandler Delegate" tocid="1bab1e49-641a-5648-d034-4298d8158019">Sprite.SpriteEventHandler Delegate</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="eae9601e-6da0-b304-9836-5e4b1e743f94.htm" title="SpriteAdjustmentRatio Structure" tocid="eae9601e-6da0-b304-9836-5e4b1e743f94">SpriteAdjustmentRatio Structure</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="b78d4878-d301-191f-9c53-4f41d3e937e6.htm" title="SpriteCollisionMethod Enumeration" tocid="b78d4878-d301-191f-9c53-4f41d3e937e6">SpriteCollisionMethod Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="07a473e4-4716-e5b9-c7d2-c4748265fc58.htm" title="SpriteController Class" tocid="07a473e4-4716-e5b9-c7d2-c4748265fc58">SpriteController Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="b2b20aab-3fc0-1b0f-8fda-213dbc180690.htm" title="SpriteDatabase Class" tocid="b2b20aab-3fc0-1b0f-8fda-213dbc180690">SpriteDatabase Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="f42e1d9a-273c-861f-b7db-6244c9266d2c.htm" title="SpriteEventArgs Class" tocid="f42e1d9a-273c-861f-b7db-6244c9266d2c">SpriteEventArgs Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ea3329cc-ea39-b02b-025e-fc9ac7e40cd8.htm" title="SpriteInfo Class" tocid="ea3329cc-ea39-b02b-025e-fc9ac7e40cd8">SpriteInfo Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="38678a79-da77-9ef7-e3e1-78ff96f5bd7b.htm" title="SpriteKeyEventHandler Delegate" tocid="38678a79-da77-9ef7-e3e1-78ff96f5bd7b">SpriteKeyEventHandler Delegate</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="efc2cb08-5c2b-c758-477e-d5739183a1ba.htm" title="SpritePauseType Enumeration" tocid="efc2cb08-5c2b-c758-477e-d5739183a1ba">SpritePauseType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="4e310248-8e1a-76aa-edbc-a83f4ba9b425.htm" title="SpritePayload Class" tocid="4e310248-8e1a-76aa-edbc-a83f4ba9b425">SpritePayload Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>SpriteLibrary Namespace</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            SpriteLibrary is a .net graphical library for creating and controlling sprites on a PictureBox.
            <p />
            A sprite is an animated image that can be moved around on a
            picturebox.  You can give the sprite an initial location, and either move it around manually or give it
            specific movement controls.
            <p />
            To use this library, you will need to add a reference to it in your project.  You will also need a reference to
            "Windows Base."
            In the solution explorer, if you right-click your project and go to "add", and then "reference" and click 
            "WindowsBase" towards the bottom.
            On that same window, on the left, click "browse." Then, click the "Browse..." button and find the sprite-library dll.
            The main places to find the SpriteLibrary and sample programs using this SpriteLibrary are here:
            <p /><a href="http://www.codeproject.com/Articles/1085446/Using-Sprites-Inside-Windows-Forms" target="_blank">http://www.codeproject.com/Articles/1085446/Using-Sprites-Inside-Windows-Forms</a><p />and
            <p /><a href="https://git.solidcharity.com/timy/SpriteLibrary" target="_blank">https://git.solidcharity.com/timy/SpriteLibrary</a><p />and
            <p /><a href="http://tyounglightsys.ddns.info/SpriteLibrary" target="_blank">http://tyounglightsys.ddns.info/SpriteLibrary</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="classList"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="5aa6ad83-7060-97ba-0874-99e52486cd6c.htm">AnimationInfo</a></td><td><div class="summary">
            An AnimationInfo class is used by the <a href="ea3329cc-ea39-b02b-025e-fc9ac7e40cd8.htm">SpriteInfo</a> class to 
            contain the instructions for creating a sprite through the dictionary.  Most people will not want
            to manually use these.  It is simplest to use the <a href="66486a11-2831-a2ee-75d8-e86857d192ab.htm">
            SpriteDatabase.OpenEditWindow</a> function and use the built-in sprite editor.  That editor will create a file
            that can be used in the database without your needing to know about the AnimationInfo.
            Again, you do not want to use these within
            your program.  Let the SpriteDatabase use this.  The reason these are visible to the program is because
            This code uses "XML Serialization" to load and save.  XML Serialization requires the items you are
            serializing to be "public", which makes them visible.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="66013d9b-4126-7d65-05bb-94eb9d134be6.htm">Sprite</a></td><td><div class="summary">
            A Sprite is an animated image that has a size, position, rotation, and possible vector
            It tracks where in the animation sequence it is, can report colisions, etc.  This SpriteController
            draws, moves, and deals with most graphical aspects of the sprites for you.
            <p />You want to read up on <a href="36d40ecf-484f-3b53-43e4-87ed9108cb76.htm">SetName(String)</a> for defining named sprites (Sprite Templates),
            <a href="b2b20aab-3fc0-1b0f-8fda-213dbc180690.htm">SpriteDatabase</a> for creating a database of sprites which are accessed on demand (this is just
            another way of creating Named Sprites, except you can store them in a database instead of making them
            programatically), and <a href="60fe71db-5ea2-cf93-f216-79b15a6779db.htm">DuplicateSprite(String)</a> for how to duplicate a 
            sprite from a sprite template.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="07a473e4-4716-e5b9-c7d2-c4748265fc58.htm">SpriteController</a></td><td><div class="summary">
            A sprite controller is the main heart of the sprite class.  Each SpriteController manages one picturebox.
            If at all possible, try to keep each game in one form, and try to avoid making and destroying
            new forms with SpriteController/pictureboxes in them.  It is hard to destroy them completely.
            <p />It is fairly simple to have multiple pictureboxes on one form.  You can <a href="ed73e5df-d940-2512-1be5-b59f7deadc57.htm">link</a> 
            SpriteControllers, which allows sprite templates (Named Sprites) to be shared between controllers.  You can also use
            a <a href="b2b20aab-3fc0-1b0f-8fda-213dbc180690.htm">SpriteDatabase</a> to define sprite templates which can be used across multiple PictureBoxes.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="b2b20aab-3fc0-1b0f-8fda-213dbc180690.htm">SpriteDatabase</a></td><td><div class="summary">
            Store Sprite information in a database.  You can preload your database with sprite definitions, and then
            create the sprites as needed.  This can drastically reduce the initial load time of a game or something.
            Though, what it really does is spread out the load time.  It still takes the same amount of time to
            load all the sprites, it just loads them on-demand.  Using a SpriteDatabase often hides any load time issues.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="f42e1d9a-273c-861f-b7db-6244c9266d2c.htm">SpriteEventArgs</a></td><td><div class="summary">
            An EventArgs that contains information about Sprites.  Most of the Sprite events use
            this SpriteEventArgs.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="ea3329cc-ea39-b02b-025e-fc9ac7e40cd8.htm">SpriteInfo</a></td><td><div class="summary">
            A class which is used by the <a href="b2b20aab-3fc0-1b0f-8fda-213dbc180690.htm">SpriteDatabase</a> to build
            Sprites.  You should not need to use this in your programming.  It is simplest to use the Load/Save features
            of the SpriteDatabase, which will load and save the SpriteInfo.
            Again, you do not want to use these within
            your program.  Let the SpriteDatabase use this.  The reason these are visible to the program is because
            This code uses "XML Serialization" to load and save.  XML Serialization requires the items you are
            serializing to be "public", which makes them visible.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="4e310248-8e1a-76aa-edbc-a83f4ba9b425.htm">SpritePayload</a></td><td><div class="summary">
            The SpritePayload is a stub of a class, for storing user-defined data and functions along with a sprite.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Structures</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="structureList"><tr><th class="iconColumn">
					 
				</th><th>Structure</th><th>Description</th></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="eae9601e-6da0-b304-9836-5e4b1e743f94.htm">SpriteAdjustmentRatio</a></td><td><div class="summary">
            A structure that contains the width and height adjustment ratio.  Use this if you need to manually calculate positions
            between the PictureBox that the sprite is in, and the Background Image itself.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Delegates</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="delegateList"><tr><th class="iconColumn">
					 
				</th><th>Delegate</th><th>Description</th></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" alt="Public delegate" title="Public delegate" /></td><td><a href="1bab1e49-641a-5648-d034-4298d8158019.htm">Sprite<span id="LSTC22FD0DA_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC22FD0DA_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SpriteEventHandler</a></td><td><div class="summary">
            A delegate that has a SpriteEventArgs instead of EventArgs.  Used for most
            of the Sprite events.  This allows us to pass more information from sprite events than
            a basic EventArgs allows for.  You will see this mainly when you are creating a function for
            one of the many Sprite Events.  (see: <a href="3aabe50b-5222-99aa-4654-356baa30033a.htm">SpriteHitsPictureBox</a>, 
            <a href="0e8b825f-f8df-9f14-41ec-f00778409dfb.htm">SpriteAnimationComplete</a>, and <a href="acb35a6f-c89a-3a7d-146d-b85ccf68d8aa.htm">SpriteHitsSprite</a> for a few examples)
            </div></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" alt="Public delegate" title="Public delegate" /></td><td><a href="38678a79-da77-9ef7-e3e1-78ff96f5bd7b.htm">SpriteKeyEventHandler</a></td><td><div class="summary">
            This is a delegate for a keypress event.  You do not need to use this directly.  This is defined so you
            can use the <a href="af7fceb3-a35e-b016-3955-696b3a3c7a7e.htm">RegisterKeyDownFunction(SpriteKeyEventHandler)</a> and
            <a href="b3e934e2-1ddf-35e3-0995-3b555539f33f.htm">RegisterKeyUpFunction(SpriteKeyEventHandler)</a> functions.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="enumerationList"><tr><th class="iconColumn">
					 
				</th><th>Enumeration</th><th>Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="b0575fa3-d1f2-f3d5-aeff-bdb7b04e46b6.htm">AnimationType</a></td><td><div class="summary">
            The SpriteInfo only recognizes a few ways to create a sprite.  Here are the different ways.
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="b78d4878-d301-191f-9c53-4f41d3e937e6.htm">SpriteCollisionMethod</a></td><td><div class="summary">
            The various types of collisions a sprite can have.  Currently only rectangle works.  The other types were added when I
            thought the different types of collision types were needed.  Someday we may add these if we find they are useful, or if
            someone else decides they want to help program the SpriteLibrary.  These values are primarily used in Sprite Events
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="efc2cb08-5c2b-c758-477e-d5739183a1ba.htm">SpritePauseType</a></td><td><div class="summary">
            The type of pause signals you can give a sprite or the sprite controller
            </div></td></tr></table></div></div></div><div id="pageFooter" class="pageFooter"> </div></body><script type="text/javascript">
<!--
    var tocNav = document.getElementById("tocNav");
    var anchor = tocNav.children[0].children[0];
    Toggle(anchor);
    tocNav.children[0].className += " current";
-->
</script>
</html>
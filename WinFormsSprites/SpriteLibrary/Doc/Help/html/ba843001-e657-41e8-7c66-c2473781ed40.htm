<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SpriteController.DoTick Event</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="DoTick event" /><meta name="System.Keywords" content="SpriteController.DoTick event" /><meta name="Microsoft.Help.F1" content="SpriteLibrary.SpriteController.DoTick" /><meta name="Microsoft.Help.Id" content="E:SpriteLibrary.SpriteController.DoTick" /><meta name="Description" content="The function called by the timer every 10 millisecods This is usually where you will do the majority of the work. You can define this manually, or when you instantiate the SpriteController" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="SpriteLibrary" /><meta name="file" content="ba843001-e657-41e8-7c66-c2473781ed40" /><meta name="guid" content="ba843001-e657-41e8-7c66-c2473781ed40" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">SpriteLibrary<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b7227c0-7a6a-6342-3b08-917c7de429cc.htm" title="SpriteLibrary" tocid="roottoc">SpriteLibrary</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b7227c0-7a6a-6342-3b08-917c7de429cc.htm" title="SpriteLibrary" tocid="6b7227c0-7a6a-6342-3b08-917c7de429cc">SpriteLibrary</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="07a473e4-4716-e5b9-c7d2-c4748265fc58.htm" title="SpriteController Class" tocid="07a473e4-4716-e5b9-c7d2-c4748265fc58">SpriteController Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="4141394a-0d7d-5cf8-6b01-0a4fb43159ab.htm" title="SpriteController Events" tocid="4141394a-0d7d-5cf8-6b01-0a4fb43159ab">SpriteController Events</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="ba843001-e657-41e8-7c66-c2473781ed40.htm" title="DoTick Event" tocid="ba843001-e657-41e8-7c66-c2473781ed40">DoTick Event</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>SpriteController<span id="LST27B9A088_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27B9A088_0?cpp=::|nu=.");</script>DoTick Event</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            The function called by the timer every 10 millisecods  This is usually where you will do the majority of the work.
            You can define this manually, or when you <a href="d20e5816-faf3-723d-5f2d-ebff462012f1.htm">instantiate the SpriteController</a></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="6b7227c0-7a6a-6342-3b08-917c7de429cc.htm">SpriteLibrary</a><br />
    <strong>Assembly:</strong>
   SpriteLibrary (in SpriteLibrary.dll) Version: 1.0.0.6 (1.0.0.6)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> event <span class="identifier">EventHandler</span> <span class="identifier">DoTick</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><h4 class="subHeading">Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/xhb70ccc" target="_blank">System<span id="LST27B9A088_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27B9A088_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>EventHandler</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection">
            The Sprite controller uses a <a href="http://msdn2.microsoft.com/en-us/library/xdh6857z" target="_blank">System.Windows.Forms.Timer.</a>  This timer is notoriously un-precise, but it is very 
            easy to set up initially.  It tries to fire off every 10 milliseconds, but it can fire off incredibly 
            slowly if you have long pieces of code; the DoTick function needs to finish before it can start again.  You want all your 
            functions to run as quickly as possible to avoid things looking jerky.
            Most programs you will make using the sprite library will begin by tapping into the DoTick Event. 
            Every time the sprite controller is ready to pass control back to your program, it will call 
            the DoTick event.  You want to see if you should be doing anything, and then exiting the do-tick function.
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> ShootingFieldForm : Form
{
    <span class="highlight-keyword">public</span> ShootingFieldForm()
    {
        InitializeComponent();
        MainDrawingArea.BackgroundImage = Properties.Resources.Background;
        MainDrawingArea.BackgroundImageLayout = ImageLayout.Stretch;
        MySpriteController = <span class="highlight-keyword">new</span> SpriteController(MainDrawingArea, CheckForKeyPress);
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> CheckForKeyPress(<span class="highlight-keyword">object</span> sender, EventArgs e)
    {
       <span class="highlight-keyword">bool</span> left = <span class="highlight-keyword">false</span>;
       <span class="highlight-keyword">bool</span> right = <span class="highlight-keyword">false</span>;
       <span class="highlight-keyword">bool</span> space = <span class="highlight-keyword">false</span>;
       <span class="highlight-keyword">bool</span> didsomething = <span class="highlight-keyword">false</span>;
       TimeSpan duration = DateTime.Now - LastMovement;
       <span class="highlight-keyword">if</span> (duration.TotalMilliseconds &lt; <span class="highlight-number">100</span>)
           <span class="highlight-keyword">return</span>;
       LastMovement = DateTime.Now;
       <span class="highlight-keyword">if</span> (MySpriteController.IsKeyPressed(Keys.A) || MySpriteController.IsKeyPressed(Keys.Left))
       {
           left = <span class="highlight-keyword">true</span>;
       }
       <span class="highlight-keyword">if</span> (MySpriteController.IsKeyPressed(Keys.D)||MySpriteController.IsKeyPressed(Keys.Right))
       {
           right = <span class="highlight-keyword">true</span>;
       }
       <span class="highlight-keyword">if</span> (left &amp;&amp; right) <span class="highlight-keyword">return</span>; <span class="highlight-comment">//do nothing if we conflict</span>
       <span class="highlight-keyword">if</span> (left)
       {               
           <span class="highlight-keyword">if</span> (LastDirection != MyDir.left)
           {
               Spaceship.SetSpriteDirectionDegrees(<span class="highlight-number">180</span>);
               <span class="highlight-comment">//We want to only change animation once.  Every time we change</span>
               <span class="highlight-comment">//the animation, it starts at the first frame again.</span>
               Spaceship.ChangeAnimation(<span class="highlight-number">0</span>);
               LastDirection = MyDir.left;
           }
           didsomething = <span class="highlight-keyword">true</span>;
           Spaceship.MovementSpeed = <span class="highlight-number">15</span>;
           Spaceship.AutomaticallyMoves = <span class="highlight-keyword">true</span>;
       }
       <span class="highlight-keyword">if</span> (right)
       {                
           <span class="highlight-keyword">if</span> (LastDirection != MyDir.right)
           {
               Spaceship.SetSpriteDirectionDegrees(<span class="highlight-number">0</span>);
               Spaceship.ChangeAnimation(<span class="highlight-number">0</span>);
               LastDirection = MyDir.right;
           }
           didsomething = <span class="highlight-keyword">true</span>;
           Spaceship.AutomaticallyMoves = <span class="highlight-keyword">true</span>;
           Spaceship.MovementSpeed = <span class="highlight-number">15</span>;
       }
       <span class="highlight-keyword">if</span>(!didsomething)
       {
           LastDirection = MyDir.stopped;
           <span class="highlight-comment">//No keys pressed.  Stop moving</span>
           Spaceship.MovementSpeed = <span class="highlight-number">0</span>;
       }
   }</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="07a473e4-4716-e5b9-c7d2-c4748265fc58.htm">SpriteController Class</a></div><div class="seeAlsoStyle"><a href="6b7227c0-7a6a-6342-3b08-917c7de429cc.htm">SpriteLibrary Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>
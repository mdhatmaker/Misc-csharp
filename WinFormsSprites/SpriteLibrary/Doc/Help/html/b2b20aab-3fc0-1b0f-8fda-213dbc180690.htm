<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SpriteDatabase Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SpriteDatabase class" /><meta name="System.Keywords" content="SpriteLibrary.SpriteDatabase class" /><meta name="System.Keywords" content="SpriteDatabase class, about SpriteDatabase class" /><meta name="Microsoft.Help.F1" content="SpriteLibrary.SpriteDatabase" /><meta name="Microsoft.Help.Id" content="T:SpriteLibrary.SpriteDatabase" /><meta name="Description" content="Store Sprite information in a database. You can preload your database with sprite definitions, and then create the sprites as needed. This can drastically reduce the initial load time of a game or something." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="SpriteLibrary" /><meta name="file" content="b2b20aab-3fc0-1b0f-8fda-213dbc180690" /><meta name="guid" content="b2b20aab-3fc0-1b0f-8fda-213dbc180690" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">SpriteLibrary<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b7227c0-7a6a-6342-3b08-917c7de429cc.htm" title="SpriteLibrary" tocid="roottoc">SpriteLibrary</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b7227c0-7a6a-6342-3b08-917c7de429cc.htm" title="SpriteLibrary" tocid="6b7227c0-7a6a-6342-3b08-917c7de429cc">SpriteLibrary</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="b2b20aab-3fc0-1b0f-8fda-213dbc180690.htm" title="SpriteDatabase Class" tocid="b2b20aab-3fc0-1b0f-8fda-213dbc180690">SpriteDatabase Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="35fc4baf-ba04-de67-a7bd-fa6819a4e8fd.htm" title="SpriteDatabase Constructor " tocid="35fc4baf-ba04-de67-a7bd-fa6819a4e8fd">SpriteDatabase Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="0ac330a3-1432-ae65-488e-e5948e7871bf.htm" title="SpriteDatabase Methods" tocid="0ac330a3-1432-ae65-488e-e5948e7871bf">SpriteDatabase Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="eae2230d-9914-4c68-149a-45c83da90b44.htm" title="SpriteDatabase Fields" tocid="eae2230d-9914-4c68-149a-45c83da90b44">SpriteDatabase Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>SpriteDatabase Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Store Sprite information in a database.  You can preload your database with sprite definitions, and then
            create the sprites as needed.  This can drastically reduce the initial load time of a game or something.
            Though, what it really does is spread out the load time.  It still takes the same amount of time to
            load all the sprites, it just loads them on-demand.  Using a SpriteDatabase often hides any load time issues.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST78EEB6B2_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">SpriteLibrary<span id="LST78EEB6B2_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SpriteDatabase</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="6b7227c0-7a6a-6342-3b08-917c7de429cc.htm">SpriteLibrary</a><br />
    <strong>Assembly:</strong>
   SpriteLibrary (in SpriteLibrary.dll) Version: 1.0.0.6 (1.0.0.6)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SpriteDatabase</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">SpriteDatabase</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="35fc4baf-ba04-de67-a7bd-fa6819a4e8fd.htm">SpriteDatabase</a></td><td><div class="summary">
            The sprite database instantiation function.  The filename can either be a file on the computer or it
            can be the string name of a resource (the filename without the extension.  If your file is accessed
            by Properties.Resources.MySprites, the "filename" would be "MySprites")
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="337078d6-e10a-94ca-0251-13a9f58ded01.htm">CloneByXMLSerializing<span id="LST78EEB6B2_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST78EEB6B2_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            This is an inefficient, but simple function to clone a class.  It works by serializing an item
            to a string, and then deserializing it into a class.  The end result is that any value which is
            publically visible is duplicated, but it is a completely separate class from the original.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals</a></td><td> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/4k87zsw7" target="_blank">Finalize</a></td><td> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode</a></td><td> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="26d6c521-4554-21ef-3a61-402e06a3ca01.htm">GetImageFromName</a></td><td><div class="summary">
            This function returns an image from the Properties.Resources.  If we tell it to UseSmartImages, then
            it caches the image in memory.  This makes it a little faster to return.  If you have a lot of sprites
            to load, using this system can speed up things a fair bit.  But, try to remember not to change the
            image that this returns unless you duplicate it first.  Otherwise you will end up changing the image
            for all the other times you reference it.  This is usualy a bad thing.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="bbc5d326-0dc1-c076-d4dc-796ed4738814.htm">GetImageNames</a></td><td><div class="summary">
            Return a list of the image names in the Properties.Resources
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType</a></td><td> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="dad86143-a294-4bfb-c83e-49453b03de01.htm">LoadObjectFromXmlFile<span id="LST78EEB6B2_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST78EEB6B2_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            Load in an XML serialized item from the specified ResourceManager.  You will usually make an XML file by
            creating an object (as a variable) and using <a href="e8336b9d-8af9-22bf-8934-d6a343349847.htm">WriteToXmlFile<span id="LST78EEB6B2_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST78EEB6B2_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(String, T)</a> to
            serialize it and save it to a file on your desktop.  Then you can drag and drop that file into your project and then use this 
            LoadObjectFromXmlFile function.  You can google XML Serialization for more information.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/57ctke0a" target="_blank">MemberwiseClone</a></td><td> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="66486a11-2831-a2ee-75d8-e86857d192ab.htm">OpenEditWindow</a></td><td><div class="summary">
            Open a Sprite Edit Window.  This window does not let you draw a sprite.  What it does is to help
            you define your sprites and makes the process of using Sprites in your program a lot easier.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="1962c085-27f4-4748-a63e-5148364328b4.htm">ReadFromXmlFile<span id="LST78EEB6B2_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST78EEB6B2_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            Reads an object instance from an XML file.
            <p>Object type must have a parameterless constructor.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="7ee23002-2338-41cf-0c54-def8b272bb80.htm">ReadFromXmlString<span id="LST78EEB6B2_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST78EEB6B2_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            This is a generic function which the SpriteDatabase uses.  It does XML Deserialization of most anything,
            and generates an XML String.  XML Serialization will take any public value of a public class and 
            make an XML entry for it.  It is a very convienent way to save and retrieve data.  You can "Serialize" the value
            with the <a href="387652c9-df19-4da9-fa94-2f1002c0902f.htm">WriteToXMLString</a> function.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="10c1df07-a9b0-63b4-3503-33b0fdd334c3.htm">Save</a></td><td><div class="summary">
            Tell the database to save the sprite definitions.  Use this while you are creating your game.
            When you are done, you will usually want to take your sprite definition file and add it to the
            resources of your game.  The resources cannot be saved to, so you cannot continue to add new sprites
            once you are loading and saving them from a resources file.  But, the resources file is included with
            the program when you build it.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f333050a-7353-3dd6-922c-52bb94ce2f0e.htm">SetIcon</a></td><td><div class="summary">
            Change the Icon for the SpriteEntryForm
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ac60fbfe-2f25-8d24-b1a2-6cd83762f380.htm">SetSnapGridSize</a></td><td><div class="summary">
            The SnapGrid is the block-size that your sprite will be.  For example, I will often have sprites with
            a snapgrid of 50,50.  This means that the sprite can be 50x50, 100x50, or anything with a step-size
            specified in the snap-grid.  It takes a "Size" specified by System.Drawing.Size.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="74aa367b-553a-4521-6844-a23b91ef5d58.htm">SpriteFromName</a></td><td><div class="summary">
            Generate a new, named sprite from a sprite template stored in the database.  Most of the time you do
            not want to use this yourself.  SpriteControllers that are defined with a database will automatically
            look up sprite templates that they do not have sprites for.  This function is just a wrapper for SmartDuplicateSprite.    
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="62400d06-17d8-96c4-90b2-d8e8198daba5.htm">SpriteNames</a></td><td><div class="summary">
            Return a list of the SpriteNames that this Database knows how to create.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString</a></td><td> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="e8336b9d-8af9-22bf-8934-d6a343349847.htm">WriteToXmlFile<span id="LST78EEB6B2_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST78EEB6B2_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_13?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            Writes the given object instance to an XML file.
            Only Public properties and variables will be written to the file. These can be any type though, even other classes.
            If there are public properties/variables that you do not want written to the file, decorate them with the [XmlIgnore] attribute.
            Object type must have a parameterless constructor.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="387652c9-df19-4da9-fa94-2f1002c0902f.htm">WriteToXMLString<span id="LST78EEB6B2_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST78EEB6B2_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST78EEB6B2_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            This is a generic function which the SpriteDatabase uses.  It does XML Serialization of most anything,
            and generates an XML String.  XML Serialization will take any public value of a public class and 
            make an XML entry for it.  It is a very convienent way to save data.  You can "Deserialize" the value
            with the <a href="7ee23002-2338-41cf-0c54-def8b272bb80.htm">ReadFromXMLString</a> function.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fields</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="fieldList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="b1290487-edeb-d980-43a0-03b3c4a82fdc.htm">SpriteInfoList</a></td><td><div class="summary">
            This is the list of SpriteInfo records that the database knows about.  You can create your own list,
            modify this list, or whatever.  The database has some reasonable functions for loading and saving a
            sprite database.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID6RBSection" class="collapsibleSection">
            This is an example of how to use a SpriteDatabase.
            When you begin developing your project, you want to start by creating a SpriteDatabase and pointing
            it to a file, and then opening up an <a href="66486a11-2831-a2ee-75d8-e86857d192ab.htm">EditorWindow.</a><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAGABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAGABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAGABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAGABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> MyGameForm : Form
{
    SpriteController mySpriteController = <span class="highlight-keyword">null</span>;
    SpriteDatabase mySpriteDatabase = <span class="highlight-keyword">null</span>;

    <span class="highlight-keyword">public</span> MyGameForm()
    {
        InitializeComponent();
        MainDrawingArea.BackgroundImage = Properties.Resources.Background;
        MainDrawingArea.BackgroundImageLayout = ImageLayout.Stretch;

        <span class="highlight-keyword">string</span> Desktop = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
        <span class="highlight-keyword">string</span> MyFile = Path.Combine(Desktop, <span class="highlight-literal">"myFile.xml"</span>);
        mySpriteDatabase = <span class="highlight-keyword">new</span> SpriteDatabase(Properties.Resources.ResourceManager, MyFile);

        mySpriteController = <span class="highlight-keyword">new</span> SpriteController(MainDrawingArea, mySpriteDatabase);

        mySpriteDatabase.OpenEditWindow();
        mySpriteDatabase.Save();
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAGABA");</script>
            The Editor Window will let you find the sprites that are contained in the various images you have
            as resources in your program, and it will save a file with those sprite templates.  Any SpriteController
            that you have instantiated with a Sprite Database (see <a href="9ed74ea6-9db4-d455-98b6-b2b75d8b1547.htm">SpriteController(PictureBox, SpriteDatabase)</a>)
            will now be able to create named sprites from the templates defined in the database.  After the first use, the
            named sprites will be accessible from within that controller just like any other named sprites.
            <p />
            After you have created your SpriteDatabase file, you will want to add your file to your program resources.
            Then, you will change the SpriteDatabase to use the resource instead of a file.  If we named the file
            "MySpriteDatabase.xml", and it got added to your resources with the name "MySpriteDatabase", you would
            pass "MySpriteDatabase" to the database instantiation.
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> MyGameForm : Form
{
    SpriteController mySpriteController = <span class="highlight-keyword">null</span>;
    SpriteDatabase mySpriteDatabase = <span class="highlight-keyword">null</span>;

    <span class="highlight-keyword">public</span> MyGameForm()
    {
        InitializeComponent();
        MainDrawingArea.BackgroundImage = Properties.Resources.Background;
        MainDrawingArea.BackgroundImageLayout = ImageLayout.Stretch;

        <span class="highlight-comment">//string Desktop = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);</span>
        <span class="highlight-comment">//string MyFile = Path.Combine(Desktop, "myFile.xml");</span>
        <span class="highlight-comment">//mySpriteDatabase = new SpriteDatabase(Properties.Resources.ResourceManager, MyFile);</span>
        mySpriteDatabase = <span class="highlight-keyword">new</span> SpriteDatabase(Properties.Resources.ResourceManager, <span class="highlight-literal">"MySpriteDatabase"</span>);

        mySpriteController = <span class="highlight-keyword">new</span> SpriteController(MainDrawingArea, mySpriteDatabase);

        <span class="highlight-comment">//mySpriteDatabase.OpenEditWindow();</span>
        <span class="highlight-comment">//mySpriteDatabase.Save();</span>
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="6b7227c0-7a6a-6342-3b08-917c7de429cc.htm">SpriteLibrary Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>